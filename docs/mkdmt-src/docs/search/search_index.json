{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"r2u: R Binaries for Ubuntu Key features Full integration with apt as every binary resolves all dependencies: No more installations (of pre-built archives) only to discover that a shared library is missing. No more surprises. Full integration with apt so that an update of a system library cannot break an R package: if a (shared) library is used by a CRAN, the package manager knows and will not remove it. No more (R package) breakage from (system) library updates. Installations are fast, automated and reversible thanks to package management layer. Complete coverage with (currently) ~ 19,000 CRAN packages (and 170+ from BioConductor). Complete support for both Ubuntu 20.04 (\"focal\") and Ubuntu 22.04 (\"jammy\"). Brief Demo The gif shows how one install.packages(\"tidyverse\") command on an Ubuntu 20.04 system installs all packages as binaries in 18 seconds (by passing the R package installation to apt using bspm ). This uses the Docker container referenced below, which has been set up with the five easy setup steps detailed here. What is Covered ? We currently support amd64 ( i.e. standard Intel/AMD cpus) for both the 'focal' 20.04 LTS and 'jammy' 22.04 LTS releases. Support for other cpu architectures is certainly possible but somewhat unlikely due to a lack of (additional hardware) resources and time. Support for other distributions is possible but unlikely right now (due to a lack of resources and time). We hope to cover Debian at some point. R 4.2.0 is used, and BioConductor 3.15 packages are provided as required by CRAN packages. What is Selected ? We use cran-logs and started by picking the N most-downloaded packages, along with their dependencies from BioConductor. (It should be noted that for example the first 100 packages already account for approximately half the total downloads: a very skewed distribution.) We iterated, and have now full coverage of CRAN. So we now cover all CRAN packages (modulo a handful of blacklisted ones) including all packages needing compilation all BioConductor package that are implied by these (and build for us). This currently resuls in 18954 binary packages from CRAN, and 177 BioConductor packages from the 3.15 release. What is it Based on? For the CRAN binaries we either repackage RSPM builds (where available) or build natively. All selected BioConductor 3.15 packages are built natively. For all of these, full dependency resolution and integration with the system is a key feature. Everything is provided as .deb binary files with proper dependency resolution by using a proper apt repo which also has a signed Release file. Usage (You could use this script add_cranapt_focal.sh or the variant for jammy to facilitate the setup but you may prefer to execute the steps outlined here by hand.) First add the repository key so that apt knows it (this is optional but recommended) apt install --yes --no-install-recommends gpg-agent # to add the key apt-key adv --keyserver keyserver.ubuntu.com --recv-keys A1489FE2AB99A21A Second, add the repository to the apt registry: echo \"deb [arch=amd64] https://dirk.eddelbuettel.com/cranapt focal main\" \\ > /etc/apt/sources.list.d/cranapt.list apt update (Replace focal with jammy for use with Ubuntu 22.04.) Third, and optionally, if you do not yet have R 4.2.0 run these two lines (or use the standard CRAN repo setup ) echo \"deb [arch=amd64] http://ppa.launchpad.net/edd/misc/ubuntu focal main\" \\ > /etc/apt/sources.list.d/edd-misc.list apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 67C2D66C4B1D4339 (Again, replace focal with jammy for use with Ubuntu 22.04.) Fourth, add repository 'pinning' as apt might get confused by some older packages (in the Ubuntu distro) which accidentally appear with a higher version number. See the next section to ensure 'CRANapt' sorts highest. After that the package are known (under their r-cran-* and r-bioc-* names). You can install them on the command-line using apt and apt-get , via aptitude as well as other front-ends. Fifth, and also optional, install and enable the bspm package so that CRANapt and other packages become available via install.packages() and update.packages() . Pinning Because we let apt (and related tools) pick the packages, we have to ensure that that the CRANapt repo sorts higher than the default repo as (older) package builds in the distribution itself may appear (to apt ) to be newer. A case in point was package gtable whose version in Ubuntu was 0.3.0+dfsg-1 which accidentally sorts higher than the rebuild we made under a newer and more consistent version number 0.3.0-1.ca2004.1 . One possible fix is 'apt pinning'. Place a file /etc/apt/preferences.d/99cranapt with content Package: * Pin: origin \"dirk.eddelbuettel.com\" Pin-Priority: 700 which will now give packages from this repo a higher default priority of 700 overriding the standard value of 500. Docker There are also two Docker containers for Ubuntu 20.04 'focal' and 22.04 'jammy', respectively, at eddelbuettel/r2u that have the above, including pinning and bspm support, already set up. Try It Use this link below (after possibly signing up for gitpod.io first) and run one of the three example scripts , or just start R in the terminal window. The gif below display running one such example to install brms from binaries in a few seconds. Using this requires only (free) GitHub and GitPod accounts. Known Issues As of early May: Some geospatial packages do not currently install on 20.04, adding the UbuntuGIS PPA as a base may help. This in not an issue on 22.04. The littler package reflects build-time configuration, the RSPM binary is then expecting a different R location so it needs a binary rebuild. Added a 'force' flag, may need a list similar to the blacklist to always compiled. A small number of packages do not build for lack required components; examples are ROracle and Rcplex. They, and their reverse dependencies, are are blacklisted and not built. Fixed Issues [DONE] The BioConductor release is still at 3.14 and should be upgraded to the now-current 3.15. [DONE] Support for Ubuntu 22.04 has been added as well. Author Dirk Eddelbuettel License The repository-building code in this package is released under the GPL (>= 2). All CRAN and BioConductor packages are released under their respective licenses. Acknowledgment This was made possible by the generous support of endless coffee thanks to my GitHub Sponsors .","title":"Index"},{"location":"#r2u-r-binaries-for-ubuntu","text":"","title":"r2u:  R Binaries for Ubuntu"},{"location":"#key-features","text":"Full integration with apt as every binary resolves all dependencies: No more installations (of pre-built archives) only to discover that a shared library is missing. No more surprises. Full integration with apt so that an update of a system library cannot break an R package: if a (shared) library is used by a CRAN, the package manager knows and will not remove it. No more (R package) breakage from (system) library updates. Installations are fast, automated and reversible thanks to package management layer. Complete coverage with (currently) ~ 19,000 CRAN packages (and 170+ from BioConductor). Complete support for both Ubuntu 20.04 (\"focal\") and Ubuntu 22.04 (\"jammy\").","title":"Key features"},{"location":"#brief-demo","text":"The gif shows how one install.packages(\"tidyverse\") command on an Ubuntu 20.04 system installs all packages as binaries in 18 seconds (by passing the R package installation to apt using bspm ). This uses the Docker container referenced below, which has been set up with the five easy setup steps detailed here.","title":"Brief Demo"},{"location":"#what-is-covered","text":"We currently support amd64 ( i.e. standard Intel/AMD cpus) for both the 'focal' 20.04 LTS and 'jammy' 22.04 LTS releases. Support for other cpu architectures is certainly possible but somewhat unlikely due to a lack of (additional hardware) resources and time. Support for other distributions is possible but unlikely right now (due to a lack of resources and time). We hope to cover Debian at some point. R 4.2.0 is used, and BioConductor 3.15 packages are provided as required by CRAN packages.","title":"What is Covered ?"},{"location":"#what-is-selected","text":"We use cran-logs and started by picking the N most-downloaded packages, along with their dependencies from BioConductor. (It should be noted that for example the first 100 packages already account for approximately half the total downloads: a very skewed distribution.) We iterated, and have now full coverage of CRAN. So we now cover all CRAN packages (modulo a handful of blacklisted ones) including all packages needing compilation all BioConductor package that are implied by these (and build for us). This currently resuls in 18954 binary packages from CRAN, and 177 BioConductor packages from the 3.15 release.","title":"What is Selected ?"},{"location":"#what-is-it-based-on","text":"For the CRAN binaries we either repackage RSPM builds (where available) or build natively. All selected BioConductor 3.15 packages are built natively. For all of these, full dependency resolution and integration with the system is a key feature. Everything is provided as .deb binary files with proper dependency resolution by using a proper apt repo which also has a signed Release file.","title":"What is it Based on?"},{"location":"#usage","text":"(You could use this script add_cranapt_focal.sh or the variant for jammy to facilitate the setup but you may prefer to execute the steps outlined here by hand.) First add the repository key so that apt knows it (this is optional but recommended) apt install --yes --no-install-recommends gpg-agent # to add the key apt-key adv --keyserver keyserver.ubuntu.com --recv-keys A1489FE2AB99A21A Second, add the repository to the apt registry: echo \"deb [arch=amd64] https://dirk.eddelbuettel.com/cranapt focal main\" \\ > /etc/apt/sources.list.d/cranapt.list apt update (Replace focal with jammy for use with Ubuntu 22.04.) Third, and optionally, if you do not yet have R 4.2.0 run these two lines (or use the standard CRAN repo setup ) echo \"deb [arch=amd64] http://ppa.launchpad.net/edd/misc/ubuntu focal main\" \\ > /etc/apt/sources.list.d/edd-misc.list apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 67C2D66C4B1D4339 (Again, replace focal with jammy for use with Ubuntu 22.04.) Fourth, add repository 'pinning' as apt might get confused by some older packages (in the Ubuntu distro) which accidentally appear with a higher version number. See the next section to ensure 'CRANapt' sorts highest. After that the package are known (under their r-cran-* and r-bioc-* names). You can install them on the command-line using apt and apt-get , via aptitude as well as other front-ends. Fifth, and also optional, install and enable the bspm package so that CRANapt and other packages become available via install.packages() and update.packages() .","title":"Usage"},{"location":"#pinning","text":"Because we let apt (and related tools) pick the packages, we have to ensure that that the CRANapt repo sorts higher than the default repo as (older) package builds in the distribution itself may appear (to apt ) to be newer. A case in point was package gtable whose version in Ubuntu was 0.3.0+dfsg-1 which accidentally sorts higher than the rebuild we made under a newer and more consistent version number 0.3.0-1.ca2004.1 . One possible fix is 'apt pinning'. Place a file /etc/apt/preferences.d/99cranapt with content Package: * Pin: origin \"dirk.eddelbuettel.com\" Pin-Priority: 700 which will now give packages from this repo a higher default priority of 700 overriding the standard value of 500.","title":"Pinning"},{"location":"#docker","text":"There are also two Docker containers for Ubuntu 20.04 'focal' and 22.04 'jammy', respectively, at eddelbuettel/r2u that have the above, including pinning and bspm support, already set up.","title":"Docker"},{"location":"#try-it","text":"Use this link below (after possibly signing up for gitpod.io first) and run one of the three example scripts , or just start R in the terminal window. The gif below display running one such example to install brms from binaries in a few seconds. Using this requires only (free) GitHub and GitPod accounts.","title":"Try It"},{"location":"#known-issues","text":"As of early May: Some geospatial packages do not currently install on 20.04, adding the UbuntuGIS PPA as a base may help. This in not an issue on 22.04. The littler package reflects build-time configuration, the RSPM binary is then expecting a different R location so it needs a binary rebuild. Added a 'force' flag, may need a list similar to the blacklist to always compiled. A small number of packages do not build for lack required components; examples are ROracle and Rcplex. They, and their reverse dependencies, are are blacklisted and not built.","title":"Known Issues"},{"location":"#fixed-issues","text":"[DONE] The BioConductor release is still at 3.14 and should be upgraded to the now-current 3.15. [DONE] Support for Ubuntu 22.04 has been added as well.","title":"Fixed Issues"},{"location":"#author","text":"Dirk Eddelbuettel","title":"Author"},{"location":"#license","text":"The repository-building code in this package is released under the GPL (>= 2). All CRAN and BioConductor packages are released under their respective licenses.","title":"License"},{"location":"#acknowledgment","text":"This was made possible by the generous support of endless coffee thanks to my GitHub Sponsors .","title":"Acknowledgment"},{"location":"changelog/","text":"2022 2022-05-08 Dirk Eddelbuettel edd@debian.org * R/package.R: Add nDeps * docker/jammy/run/Dockerfile: Use asc key file * .gitpod.Dockerfile: Switch to 22.04 2022-05-07 Dirk Eddelbuettel edd@debian.org * README.md: Updated docs * docs/*: Idem * docker/jamm/build/*: Use http instead of mount for pinning * docker/jammy/build/debBuild.sh: Call dpkg-buildpackage with -b * inst/scripts/add_cranapt_focal.sh: Renamed from add_cranapt.sh * inst/scripts/add_cranapt_jammy.sh: Added 2022-05-06 Dirk Eddelbuettel edd@debian.org * R/package.R: Support building for multiple LTS releases * R/init.R: Idem, skip test for R >= 4.0, two-tiered depends * DESCRIPTION: Depend on R >= 4.0 2022-05-04 Dirk Eddelbuettel edd@debian.org * R/package.R: Simpler interface * inst/examples/add_cranapt.sh: Renamed from setup_r2u.sh * README.md: Documentation updates 2022-05-03 Dirk Eddelbuettel edd@debian.org * Initial version","title":"Changelog"},{"location":"changelog/#2022","text":"2022-05-08 Dirk Eddelbuettel edd@debian.org * R/package.R: Add nDeps * docker/jammy/run/Dockerfile: Use asc key file * .gitpod.Dockerfile: Switch to 22.04 2022-05-07 Dirk Eddelbuettel edd@debian.org * README.md: Updated docs * docs/*: Idem * docker/jamm/build/*: Use http instead of mount for pinning * docker/jammy/build/debBuild.sh: Call dpkg-buildpackage with -b * inst/scripts/add_cranapt_focal.sh: Renamed from add_cranapt.sh * inst/scripts/add_cranapt_jammy.sh: Added 2022-05-06 Dirk Eddelbuettel edd@debian.org * R/package.R: Support building for multiple LTS releases * R/init.R: Idem, skip test for R >= 4.0, two-tiered depends * DESCRIPTION: Depend on R >= 4.0 2022-05-04 Dirk Eddelbuettel edd@debian.org * R/package.R: Simpler interface * inst/examples/add_cranapt.sh: Renamed from setup_r2u.sh * README.md: Documentation updates 2022-05-03 Dirk Eddelbuettel edd@debian.org * Initial version","title":"2022"},{"location":"news/","text":"Version 0.0.2 (2022-05-08) New 'release' with Ubuntu 22.04 support Version 0.0.1 (2022-05-04) Initial release for Ubuntu 20.04","title":"News"},{"location":"man/buildPackage/","text":"Build a Package Description Builds a package considering the repository information, dependencies and already built packages. Usage buildPackage(pkg, tgt, debug = FALSE, verbose = FALSE, force = FALSE, xvfb = FALSE, suffix = \".1\") buildAll(pkg, tgt, debug = FALSE, verbose = FALSE, force = FALSE, xvfb = FALSE) topN(npkg, date = Sys.Date() - 1, from = 1L) topNCompiled(npkg, date = Sys.Date() - 1, from = 1L) nDeps(ndeps) Arguments pkg character Name of the CRAN or BioConductor package to build tgt character Name (or version) of the build target distribution, this is restricted to either \u201c20.04\u201d or \u201c22.04\u201d (or their names \u201cfocal\u201d or \u201cjammy\u201d) debug logical Optional value to show more debugging output, default is \u2018FALSE\u2019 verbose logical Optional value show more verbose progress output, default is \u2018FALSE\u2019 force logical Optional value to force package build from source, default is \u2018FALSE\u2019 xvfb logical Optional value to build under xvfb-run , default is \u2018FALSE\u2019 suffix character Optional value to override default package version suffix of \u2018.1\u2019 npkg integer Number of packages to build date Date Relevant date for cranlog download stats from integer Optional applied as offset to npkg to shift the selection ndeps integer Optional value for selected build-dependency count build via nDeps Details The buildPackage function builds the given package. The buildAll package applies to all elements in the supplied vector of packages. The topN and topNCompiled helpers select \u2018N\u2019 among all (or all compiled) packages. The nDeps function builds packages with a given (adjusted) build-dependency count. Note that this build process is still somewhat tailored to the build setup use by the author and is not (yet ?) meant to be universally transferable. It should be with a little care and possible examination of the code. If interested, please get in touch. Value Nothing as the function is invoked for the side effect of building binary packages Author(s) Dirk Eddelbuettel","title":"buildPackage"},{"location":"man/buildPackage/#build-a-package","text":"","title":"Build a Package"},{"location":"man/buildPackage/#description","text":"Builds a package considering the repository information, dependencies and already built packages.","title":"Description"},{"location":"man/buildPackage/#usage","text":"buildPackage(pkg, tgt, debug = FALSE, verbose = FALSE, force = FALSE, xvfb = FALSE, suffix = \".1\") buildAll(pkg, tgt, debug = FALSE, verbose = FALSE, force = FALSE, xvfb = FALSE) topN(npkg, date = Sys.Date() - 1, from = 1L) topNCompiled(npkg, date = Sys.Date() - 1, from = 1L) nDeps(ndeps)","title":"Usage"},{"location":"man/buildPackage/#arguments","text":"pkg character Name of the CRAN or BioConductor package to build tgt character Name (or version) of the build target distribution, this is restricted to either \u201c20.04\u201d or \u201c22.04\u201d (or their names \u201cfocal\u201d or \u201cjammy\u201d) debug logical Optional value to show more debugging output, default is \u2018FALSE\u2019 verbose logical Optional value show more verbose progress output, default is \u2018FALSE\u2019 force logical Optional value to force package build from source, default is \u2018FALSE\u2019 xvfb logical Optional value to build under xvfb-run , default is \u2018FALSE\u2019 suffix character Optional value to override default package version suffix of \u2018.1\u2019 npkg integer Number of packages to build date Date Relevant date for cranlog download stats from integer Optional applied as offset to npkg to shift the selection ndeps integer Optional value for selected build-dependency count build via nDeps","title":"Arguments"},{"location":"man/buildPackage/#details","text":"The buildPackage function builds the given package. The buildAll package applies to all elements in the supplied vector of packages. The topN and topNCompiled helpers select \u2018N\u2019 among all (or all compiled) packages. The nDeps function builds packages with a given (adjusted) build-dependency count. Note that this build process is still somewhat tailored to the build setup use by the author and is not (yet ?) meant to be universally transferable. It should be with a little care and possible examination of the code. If interested, please get in touch.","title":"Details"},{"location":"man/buildPackage/#value","text":"Nothing as the function is invoked for the side effect of building binary packages","title":"Value"},{"location":"man/buildPackage/#authors","text":"Dirk Eddelbuettel","title":"Author(s)"},{"location":"man/r2u-package/","text":"Turn RSPM Binary Packages into Ubuntu Packages Description RSPM binary packages are turned into Ubuntu packages containing proper system dependency information. Package Content Index: This package was not yet installed at build time. Maintainer Dirk Eddelbuettel \\ edd@debian.org Author(s) Dirk Eddelbuettel","title":"R2u package"},{"location":"man/r2u-package/#turn-rspm-binary-packages-into-ubuntu-packages","text":"","title":"Turn RSPM Binary Packages into Ubuntu Packages"},{"location":"man/r2u-package/#description","text":"RSPM binary packages are turned into Ubuntu packages containing proper system dependency information.","title":"Description"},{"location":"man/r2u-package/#package-content","text":"Index: This package was not yet installed at build time.","title":"Package Content"},{"location":"man/r2u-package/#maintainer","text":"Dirk Eddelbuettel \\ edd@debian.org","title":"Maintainer"},{"location":"man/r2u-package/#authors","text":"Dirk Eddelbuettel","title":"Author(s)"},{"location":"vignettes/FAQ/","text":"General Why is it called CRANapt? We hope to eventually provide CRAN binaries for multiple distributions (Debian, Ubuntu, ...), releases (testing/stable, LTS/current, ...), hardware platforms, and so on. But we have to start somewhere so Ubuntu LTS for amd64 is the first instance. How is it pronounced? We think of the 'n' as silent so you can always say \"oh I just crapted these packages onto my system\". A package reports it is uninstallable Make sure you follow the 'Pinnning' section of the README.md and the setup script . Some (older) builds in the (main) Ubuntu distribution appear to sort higher and would block an installation of the freshly made binary (under a consistent naming scheme). The apt feature of 'pinning' is what we want here to have an entire repository sort higher. What is the relationship with the c2d4u PPA ? We are huge fans of the c2d4u repository and have used it for a decade or longer. It uses the proper build process, and sits on a very solid Launchpad infrastructure supported by Canonical. However, this also makes it a little less nimble and precludes for example use of external build resources. Overall it also still at a fraction of CRAN packages. So we created this repo as an experiment to see if we could scale a simple and direct approach, and in the hopes it can complement the c2d4u PPA and offer additional packages bspm Should I install bspm? We find it helpful. It allows you to use install.packages() in R, or script install.r , and refer to CRAN and BioConductor packages by their names which is more natural. bspm will call apt for you. Hence our default Docker image has bspm installed and enabled by default. bspm is a little noisy You can wrap suppressMessages() around bspm::enable() . We now do so in the Docker image. Other errors With the 22.04 \"jammy\" container I get errors We found that adding --security-opt seccomp=unconfined to the docker invocation silenced those on AWS hosts. We did not seem to need them elsewhere.","title":"FAQ"},{"location":"vignettes/FAQ/#general","text":"","title":"General"},{"location":"vignettes/FAQ/#why-is-it-called-cranapt","text":"We hope to eventually provide CRAN binaries for multiple distributions (Debian, Ubuntu, ...), releases (testing/stable, LTS/current, ...), hardware platforms, and so on. But we have to start somewhere so Ubuntu LTS for amd64 is the first instance.","title":"Why is it called CRANapt?"},{"location":"vignettes/FAQ/#how-is-it-pronounced","text":"We think of the 'n' as silent so you can always say \"oh I just crapted these packages onto my system\".","title":"How is it pronounced?"},{"location":"vignettes/FAQ/#a-package-reports-it-is-uninstallable","text":"Make sure you follow the 'Pinnning' section of the README.md and the setup script . Some (older) builds in the (main) Ubuntu distribution appear to sort higher and would block an installation of the freshly made binary (under a consistent naming scheme). The apt feature of 'pinning' is what we want here to have an entire repository sort higher.","title":"A package reports it is uninstallable"},{"location":"vignettes/FAQ/#what-is-the-relationship-with-the-c2d4u-ppa","text":"We are huge fans of the c2d4u repository and have used it for a decade or longer. It uses the proper build process, and sits on a very solid Launchpad infrastructure supported by Canonical. However, this also makes it a little less nimble and precludes for example use of external build resources. Overall it also still at a fraction of CRAN packages. So we created this repo as an experiment to see if we could scale a simple and direct approach, and in the hopes it can complement the c2d4u PPA and offer additional packages","title":"What is the relationship with the c2d4u PPA ?"},{"location":"vignettes/FAQ/#bspm","text":"","title":"bspm"},{"location":"vignettes/FAQ/#should-i-install-bspm","text":"We find it helpful. It allows you to use install.packages() in R, or script install.r , and refer to CRAN and BioConductor packages by their names which is more natural. bspm will call apt for you. Hence our default Docker image has bspm installed and enabled by default.","title":"Should I install bspm?"},{"location":"vignettes/FAQ/#bspm-is-a-little-noisy","text":"You can wrap suppressMessages() around bspm::enable() . We now do so in the Docker image.","title":"bspm is a little noisy"},{"location":"vignettes/FAQ/#other-errors","text":"","title":"Other errors"},{"location":"vignettes/FAQ/#with-the-2204-jammy-container-i-get-errors","text":"We found that adding --security-opt seccomp=unconfined to the docker invocation silenced those on AWS hosts. We did not seem to need them elsewhere.","title":"With the 22.04 \"jammy\" container I get errors"},{"location":"vignettes/Notes/","text":"jammy builds sp: The upstream package r-cran-sp has an epoch in its version number blocking pinning so a one-off build with an epoch added to this version was made gastemp: The suggested package rstantools appears to be a build dependency so as a one-off it was added","title":"Notes"},{"location":"vignettes/Notes/#jammy-builds","text":"sp: The upstream package r-cran-sp has an epoch in its version number blocking pinning so a one-off build with an epoch added to this version was made gastemp: The suggested package rstantools appears to be a build dependency so as a one-off it was added","title":"jammy builds"}]}